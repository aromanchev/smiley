{"version":3,"sources":["hooks/web3/index.js","contract-address.ts","blocks/introduce/index.tsx","App.tsx","index.tsx"],"names":["useWeb3","ethereum","window","signer","ethers","providers","Web3Provider","getSigner","contract","Contract","NFTContract","abi","getAccount","request","method","then","account","catch","err","mint","tokenId","mintNft","value","utils","parseEther","data","getBaseURI","baseTokenURI","setBaseURI","newURI","Introduce","className","onClick","App","useEffect","ReactDOM","render","document","getElementById"],"mappings":"immEAKaA,EAAU,WACrB,IAAQC,EAAaC,OAAbD,SAEFE,EADW,IAAIC,IAAOC,UAAUC,aAAaL,GAC3BM,YAClBC,EAAW,IAAIJ,IAAOK,SCTC,6CDW3BC,EAAYC,IACZR,GAGIS,EAAU,iDAAG,wGACJX,EACZY,QAAQ,CAAEC,OAAQ,wBAClBC,MAAK,SAACC,GAAD,OAAaA,EAAQ,MAC1BC,OAAM,SAAAC,GAAG,OAAIA,KAJG,mFAAH,qDAOVC,EAAI,iDAAG,WAAOC,GAAP,2FACEZ,EAASa,QAAQD,EAAS,CAACE,MAAOlB,IAAOmB,MAAMC,WAAW,aACtET,MAAK,SAACU,GAAD,OAAUA,KACfR,OAAM,SAAAC,GAAG,OAAIA,KAHH,mFAAH,sDAMJQ,EAAU,iDAAG,wGACJlB,EAASmB,eADL,mFAAH,qDAIVC,EAAU,iDAAG,WAAOC,GAAP,2FACJrB,EAASoB,WAAWC,GADhB,mFAAH,sDAIhB,MAAO,CACLjB,aACAc,aACAE,aACAT,S,QEfWW,EAvBG,WAChB,IAAQX,EAASnB,IAATmB,KAMR,OACE,sBAAKY,UAAU,6BAAf,UACE,sDACA,iaAQA,wBAAQC,QAAS,WAdnBb,EAcqC,IAAnC,yBCASc,G,MAbH,WACV,MAAmCjC,IAA3BY,EAAR,EAAQA,WAAYc,EAApB,EAAoBA,WAKpB,OAJAQ,qBAAU,WACRtB,IACAc,MACC,IAED,qBAAKK,UAAU,YAAf,SACE,cAAC,EAAD,QCXNI,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.2bb73ba5.chunk.js","sourcesContent":["import { ethers } from 'ethers';\n\nimport NFTContract from '../../artifacts/contracts/NFT.sol/NFT.json';\nimport { contractAddress } from '../../contract-address';\n\nexport const useWeb3 = () => {\n  const { ethereum } = window;\n  const provider = new ethers.providers.Web3Provider(ethereum);\n  const signer = provider.getSigner();\n  const contract = new ethers.Contract(\n    contractAddress,\n    NFTContract.abi,\n    signer\n  );\n\n  const getAccount = async () => {\n    return await ethereum\n    .request({ method: \"eth_requestAccounts\" })\n    .then((account) => account[0])\n    .catch(err => err)\n  }\n\n  const mint = async (tokenId) => {\n    return await contract.mintNft(tokenId, {value: ethers.utils.parseEther(\"0.00005\")})\n    .then((data) => data)\n    .catch(err => err);\n  }\n\n  const getBaseURI = async () => {\n    return await contract.baseTokenURI();\n  }\n\n  const setBaseURI = async (newURI) => {\n    return await contract.setBaseURI(newURI);\n  }\n\n  return {\n    getAccount,\n    getBaseURI,\n    setBaseURI,\n    mint,\n  }\n};\n\n","export const contractAddress = \"0xc5ba6048dc60107aC7733a85767A0f0C2945b509\"","import { useWeb3 } from \"../../hooks\";\n\nconst Introduce = () => {\n  const { mint } = useWeb3();\n\n  const handleClick = (tokenId: number) => {\n    mint(tokenId);\n  };\n\n  return (\n    <div className=\"web3-block introduce-block\">\n      <h1>Welcome to the DApp!</h1>\n      <p>\n        Lorem ipsum dolor sit amet, Lorem ipsum dolor sit amet Lorem ipsum dolor\n        sit amet, Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet, Lorem\n        ipsum dolor sit amet Lorem ipsum dolor sit amet, Lorem ipsum dolor sit\n        amet Lorem ipsum dolor sit amet, Lorem ipsum dolor sit amet Lorem ipsum\n        dolor sit amet, Lorem ipsum dolor sit amet Lorem ipsum dolor sit amet,\n        Lorem ipsum dolor sit amet\n      </p>\n      <button onClick={() => handleClick(8)}>MintNFT</button>\n    </div>\n  );\n};\n\nexport default Introduce;\n","import { useEffect } from \"react\";\nimport { useWeb3 } from \"./hooks\";\n\nimport { Introduce } from \"./blocks\";\n\nimport \"./App.css\";\n\nconst App = () => {\n  const { getAccount, getBaseURI } = useWeb3();\n  useEffect(() => {\n    getAccount();\n    getBaseURI();\n  }, []);\n  return (\n    <div className=\"web3-dApp\">\n      <Introduce />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}