{"version":3,"sources":["hooks/web3/index.js","contract-address.ts","components/Header/index.tsx","assets/icons.tsx","components/Modal/WalletModal.tsx","blocks/Market/kit.ts","blocks/Market/index.tsx","App.tsx","index.tsx"],"names":["useWeb3","ethereum","window","provider","ethers","providers","Web3Provider","signer","getSigner","contract","Contract","NFTContract","abi","getAccounts","listAccounts","connectAccount","length","request","method","then","account","catch","err","mint","tokenId","mintNft","value","utils","parseEther","data","isConnected","addresses","Header","className","onClick","open","ETHIcon","width","height","xmlns","viewBox","fill","d","WarningIcon","version","id","WalletModal","REACT_APP_PINATA_CLOUD_URL","process","smileyData","name","image","Market","map","alt","src","App","useState","connected","setConnected","useEffect","res","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d8a452d2.chunk.js","sourcesContent":["import { ethers } from \"ethers\";\n\nimport NFTContract from \"../../artifacts/contracts/NFT.sol/SmileyNFT.json\";\nimport { contractAddress } from \"../../contract-address\";\n\nexport const useWeb3 = () => {\n  const { ethereum } = window;\n  const provider = new ethers.providers.Web3Provider(ethereum);\n  const signer = provider.getSigner();\n  const contract = new ethers.Contract(\n    contractAddress,\n    NFTContract.abi,\n    signer\n  );\n\n  const getAccounts = async () => {\n    return await provider.listAccounts();\n  }\n\n  const connectAccount = async () => {\n    const accounts = await getAccounts();\n    if (accounts.length) {\n      return;\n    }\n    return await ethereum\n      .request({ method: \"eth_requestAccounts\" })\n      .then((account) => {\n        account[0];\n      })\n      .catch((err) => err);\n  };\n\n  const mint = async (tokenId) => {\n    return await contract\n      .mintNft(tokenId, { value: ethers.utils.parseEther(\"0.00005\") })\n      .then((data) => data)\n      .catch((err) => err);\n  };\n\n  const isConnected = async () => {\n    const addresses = await provider.listAccounts();\n    return !!addresses.length;\n  };\n\n  return {\n    isConnected,\n    connectAccount,\n    getAccounts,\n    mint,\n  };\n};\n","export const contractAddress = \"0x8D9Ac8a6551CeF44EF9c5D5eC5f053da1dcA1A7A\"","import \"./index.scss\";\n\nconst Header = () => {\n  const redirectToGithub = () => {\n    window.open(\"https://github.com/ruz1k/smiley\");\n  };\n  return (\n    <header>\n      <ul className=\"container\">\n        <li>\n          created by <a onClick={redirectToGithub}>ruz1k</a>.\n        </li>\n        <li>SMILEY</li>\n        <li>Â© 2022</li>\n      </ul>\n    </header>\n  );\n};\n\nexport default Header;\n","type IconProps = {\n  width?: number;\n  height?: number;\n};\n\nexport const ETHIcon = ({ width, height }: IconProps): JSX.Element => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 48 48\"\n    width={width}\n    height={height}\n  >\n    <path fill=\"#7880e7\" d=\"M11,24L25,2l14,22l-14,8L11,24z\" />\n    <path fill=\"#5c64c7\" d=\"M25,2l14,22l-14,8V2z\" />\n    <path fill=\"#7880e7\" d=\"M11,27l14,8l14-8L25,46L11,27z\" />\n    <path\n      fill=\"#5c64c7\"\n      d=\"M25,35l14-8L25,46V35z M11,24l14-6l14,6l-14,8L11,24z\"\n    />\n    <path fill=\"#2a3192\" d=\"M25,18l14,6l-14,8V18z\" />\n  </svg>\n);\n\nexport const WarningIcon = ({ width, height }: IconProps): JSX.Element => (\n  <svg\n    version=\"1.1\"\n    id=\"Layer_1\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width={width || 123}\n    height={height || 97}\n    viewBox=\"0 0 123 97\"\n  >\n    <g>\n      <path\n        fill-rule=\"evenodd\"\n        clip-rule=\"evenodd\"\n        d=\"M65.45,1.972l55.594,87.323c1.673,2.63,3.117,8.016,0,8.016H1.837 c-3.118,0-1.676-5.386,0-8.016L57.431,1.972C59.106-0.658,63.774-0.656,65.45,1.972L65.45,1.972z M56.578,74.146h9.682v8.561 h-9.682V74.146L56.578,74.146z M66.254,68.217H56.58c-0.964-11.756-2.982-19.216-2.982-30.955c0-4.331,3.51-7.842,7.841-7.842 c4.332,0,7.842,3.511,7.842,7.842C69.282,48.996,67.236,56.471,66.254,68.217L66.254,68.217z\"\n      />\n    </g>\n  </svg>\n);\n","import { WarningIcon } from \"../../assets/icons\";\nimport \"./WalletModal.scss\";\n\nconst WalletModal = () => (\n  <div className=\"wallet-modal\">\n    <WarningIcon width={140} height={110} />\n    <h1>Please connect wallet to Smiley dApp.</h1>\n  </div>\n);\n\nexport default WalletModal;\n","const { REACT_APP_PINATA_CLOUD_URL } = process.env;\n\nexport const smileyData = [\n  { id: 1, name: \"Smiley NFT #1\", image: REACT_APP_PINATA_CLOUD_URL + \"1.png\" },\n  { id: 2, name: \"Smiley NFT #2\", image: REACT_APP_PINATA_CLOUD_URL + \"2.png\" },\n  { id: 3, name: \"Smiley NFT #3\", image: REACT_APP_PINATA_CLOUD_URL + \"3.png\" },\n  { id: 4, name: \"Smiley NFT #4\", image: REACT_APP_PINATA_CLOUD_URL + \"4.png\" },\n  { id: 5, name: \"Smiley NFT #5\", image: REACT_APP_PINATA_CLOUD_URL + \"5.png\" },\n  { id: 6, name: \"Smiley NFT #6\", image: REACT_APP_PINATA_CLOUD_URL + \"6.png\" },\n];\n","import { ETHIcon } from \"../../assets/icons\";\nimport { useWeb3 } from \"../../hooks\";\nimport \"./index.scss\";\nimport { smileyData } from \"./kit\";\n\nconst Market = () => {\n  const { mint } = useWeb3();\n  const mintNft = async (tokenId: number) => {\n    await mint(tokenId);\n  };\n  return (\n    <div className=\"container smiley-market\">\n      <h2>market.</h2>\n      <div className=\"smiley-market-container\">\n        {smileyData.map(({ id, name, image }) => (\n          <div key={id} className=\"smiley-market-container-card\">\n            <img alt=\"smiley img\" width={350} height={350} src={image} />\n            <div className=\"smiley-market-container-card-info\">\n              <h3>{name}</h3>\n              <div className=\"smiley-market-container-card-info-cost\">\n                <ETHIcon width={32} height={32} />\n                <span>0,08 ETH</span>\n              </div>\n              <button onClick={() => mintNft(id)}>mint.</button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Market;\n","import { useEffect, useState } from \"react\";\nimport { useWeb3 } from \"./hooks\";\n\nimport { Header, WalletModal } from \"./components\";\nimport { Market } from \"./blocks\";\n\nimport \"./styles/App.scss\";\n\nconst App = () => {\n  const { connectAccount, isConnected } = useWeb3();\n  const [connected, setConnected] = useState(true);\n  useEffect(() => {\n    connectAccount();\n    isConnected().then((res) => setConnected(res));\n  }, []);\n  return (\n    <div className=\"smiley-dApp\">\n      <Header />\n      <Market />\n      {!connected && <WalletModal />}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport \"./styles/index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}